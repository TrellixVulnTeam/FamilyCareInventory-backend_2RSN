{"ast":null,"code":"import { onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { myItems } from '@/api/myProduct';\nimport { listItem } from '@/api/listProduct'; // eslint-disable-next-line\n\nimport { ElMessage, ElMessageBox } from 'element-plus';\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const form = ref();\n    const blankForm = {\n      product_name: '',\n      product_version: '',\n      inventory: ''\n    };\n    form.value = blankForm;\n\n    const initProductData = async () => {\n      itemsData.value = [];\n      itemsData.value = await myItems(localStorage.getItem('token'));\n    }; // listItem\n    // eslint-disable-next-line\n\n\n    const store = useStore();\n\n    const handleList = async () => {\n      // console.log(form)\n      // store.dispatch('app/listItem', form.value)\n      await initProductData();\n      listItem(form.value, localStorage.getItem('token')).then(() => {\n        // console.log('get returned' + res)\n        ElMessageBox.alert('提交成功！', {\n          confirmButtonText: 'OK',\n          callback: () => {\n            form.value = {\n              product_name: '',\n              product_version: '',\n              inventory: ''\n            };\n            ElMessage({\n              type: 'info',\n              message: 'this form has been reset'\n            });\n          }\n        });\n      }).catch(err => {\n        alert(err);\n      });\n      setTimeout(initProductData, 1);\n    };\n\n    const itemsData = ref([]);\n    onMounted(async () => {\n      const y = await myItems(localStorage.getItem('token'));\n      itemsData.value = y;\n    });\n\n    const handleDelete = async row => {\n      console.log(row);\n      rateSwap({\n        email: localStorage.getItem('token'),\n        rating: rateValue.value[row.swapID],\n        swapID: row.swapID\n      });\n      ElMessage({\n        type: 'info',\n        message: 'rated, reset the form'\n      });\n      await initSwapData();\n      await initMainPage();\n      await initRateFrom();\n\n      if (rateData.value.length === 0) {\n        ElMessage({\n          type: 'info',\n          message: 'no more swaps need to rate '\n        });\n        dialogUnratedVisible.value = false;\n      }\n    };\n\n    const __returned__ = {\n      form,\n      blankForm,\n      initProductData,\n      store,\n      handleList,\n      itemsData,\n      handleDelete,\n      onMounted,\n      ref,\n      useStore,\n      myItems,\n      listItem,\n      ElMessage,\n      ElMessageBox\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AA+CA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,KAA/B;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,cAAxC;;;;;;IAEA,MAAMC,IAAI,GAAGN,GAAG,EAAhB;IACA,MAAMO,SAAS,GAAG;MAChBC,YAAY,EAAE,EADE;MAEhBC,eAAe,EAAE,EAFD;MAGhBC,SAAS,EAAE;IAHK,CAAlB;IAKAJ,IAAI,CAACK,KAAL,GAAaJ,SAAb;;IACA,MAAMK,eAAe,GAAG,YAAY;MAClCC,SAAS,CAACF,KAAV,GAAkB,EAAlB;MACAE,SAAS,CAACF,KAAV,GAAkB,MAAMT,OAAO,CAACY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAA/B;IACD,CAHD,EAKA;IACA;;;IACA,MAAMC,KAAK,GAAGf,QAAQ,EAAtB;;IACA,MAAMgB,UAAU,GAAG,YAAY;MAC7B;MACA;MACA,MAAML,eAAe,EAArB;MACAT,QAAQ,CAACG,IAAI,CAACK,KAAN,EAAaG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb,CAAR,CAAoDG,IAApD,CAAyD,MAAM;QAC7D;QACAb,YAAY,CAACc,KAAb,CAAmB,OAAnB,EAA4B;UAC1BC,iBAAiB,EAAE,IADO;UAE1BC,QAAQ,EAAE,MAAM;YACdf,IAAI,CAACK,KAAL,GAAa;cACXH,YAAY,EAAE,EADH;cAEXC,eAAe,EAAE,EAFN;cAGXC,SAAS,EAAE;YAHA,CAAb;YAKAN,SAAS,CAAC;cACRkB,IAAI,EAAE,MADE;cAERC,OAAO,EAAE;YAFD,CAAD,CAAT;UAID;QAZyB,CAA5B;MAcD,CAhBD,EAgBGC,KAhBH,CAgBUC,GAAD,IAAS;QAChBN,KAAK,CAACM,GAAD,CAAL;MACD,CAlBD;MAmBAC,UAAU,CAACd,eAAD,EAAkB,CAAlB,CAAV;IACD,CAxBD;;IAyBA,MAAMC,SAAS,GAAGb,GAAG,CAAC,EAAD,CAArB;IACAD,SAAS,CAAC,YAAY;MACpB,MAAM4B,CAAC,GAAG,MAAMzB,OAAO,CAACY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAvB;MACAF,SAAS,CAACF,KAAV,GAAkBgB,CAAlB;IACD,CAHQ,CAAT;;IAKA,MAAMC,YAAY,GAAG,MAAOC,GAAP,IAAe;MAClCC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACAG,QAAQ,CAAC;QACPC,KAAK,EAAEnB,YAAY,CAACC,OAAb,CAAqB,OAArB,CADA;QAEPmB,MAAM,EAAEC,SAAS,CAACxB,KAAV,CAAgBkB,GAAG,CAACO,MAApB,CAFD;QAGPA,MAAM,EAAEP,GAAG,CAACO;MAHL,CAAD,CAAR;MAKAhC,SAAS,CAAC;QACRkB,IAAI,EAAE,MADE;QAERC,OAAO,EAAE;MAFD,CAAD,CAAT;MAIA,MAAMc,YAAY,EAAlB;MACA,MAAMC,YAAY,EAAlB;MACA,MAAMC,YAAY,EAAlB;;MACA,IAAIC,QAAQ,CAAC7B,KAAT,CAAe8B,MAAf,KAA0B,CAA9B,EAAiC;QAC/BrC,SAAS,CAAC;UACRkB,IAAI,EAAE,MADE;UAERC,OAAO,EAAE;QAFD,CAAD,CAAT;QAIAmB,oBAAoB,CAAC/B,KAArB,GAA6B,KAA7B;MACD;IACF,CArBD","names":["onMounted","ref","useStore","myItems","listItem","ElMessage","ElMessageBox","form","blankForm","product_name","product_version","inventory","value","initProductData","itemsData","localStorage","getItem","store","handleList","then","alert","confirmButtonText","callback","type","message","catch","err","setTimeout","y","handleDelete","row","console","log","rateSwap","email","rating","rateValue","swapID","initSwapData","initMainPage","initRateFrom","rateData","length","dialogUnratedVisible"],"sources":["/Users/alzhong/Personal/Projects/FamilyCareInventory/frontend/src/views/MainView/InventoryView/InventoryView.vue"],"sourcesContent":["<template>\n  <div class=\"page-title\">\n    <h1>添加库存</h1>\n    <hr style=\"width:50%;text-align:left;margin-left:0\">\n  </div>\n  <div class=\"list-form\">\n    <el-form :model=\"form\" label-width=\"100px\">\n      <el-form-item label=\"品名\">\n        <el-input class=\"item-input\" size=\"large\" v-model=\"form.product_name\"/>\n      </el-form-item>\n      <el-form-item label=\"型号\">\n        <el-input class=\"item-input\" size=\"large\" v-model=\"form.product_version\"/>\n      </el-form-item>\n      <el-form-item label=\"库存\">\n        <el-input class=\"item-input\" size=\"large\" v-model=\"form.inventory\"/>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"handleList\" class=\"item-button\">提交</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n  <br/>\n  <br/>\n  <br/>\n  <div class=\"page-title\">\n    <h1>现有库存</h1>\n    <hr style=\"width:50%;text-align:left;margin-left:0\">\n  </div>\n\n  <div class=\"items-container\">\n    <el-table :data=\"itemsData\" style=\"width: 100%\" table-layout: auto>\n      <el-table-column prop=\"product_name\" label=\"品名\"/>\n      <el-table-column prop=\"product_version\" label=\"型号\"/>\n      <el-table-column prop=\"inventory\" label=\"库存量\"/>\n      <el-table-column prop=\"created_time\" label=\"创建时间\"/>\n      <el-table-column fixed=\"right\" label=\"Actions\">\n        <template #default=\"{ row }\">\n          <el-button v-model=\"itemsData[row.productId]\" class=\"m-2\" placeholder=\"Select\" size=\"small\"\n                     @change=\"handleDelete(row)\">\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport { useStore } from 'vuex'\nimport { myItems } from '@/api/myProduct'\nimport { listItem } from '@/api/listProduct'\n// eslint-disable-next-line\nimport { ElMessage, ElMessageBox } from 'element-plus'\n\nconst form = ref()\nconst blankForm = {\n  product_name: '',\n  product_version: '',\n  inventory: ''\n}\nform.value = blankForm\nconst initProductData = async () => {\n  itemsData.value = []\n  itemsData.value = await myItems(localStorage.getItem('token'))\n}\n\n// listItem\n// eslint-disable-next-line\nconst store = useStore()\nconst handleList = async () => {\n  // console.log(form)\n  // store.dispatch('app/listItem', form.value)\n  await initProductData()\n  listItem(form.value, localStorage.getItem('token')).then(() => {\n    // console.log('get returned' + res)\n    ElMessageBox.alert('提交成功！', {\n      confirmButtonText: 'OK',\n      callback: () => {\n        form.value = {\n          product_name: '',\n          product_version: '',\n          inventory: ''\n        }\n        ElMessage({\n          type: 'info',\n          message: 'this form has been reset'\n        })\n      }\n    })\n  }).catch((err) => {\n    alert(err)\n  })\n  setTimeout(initProductData, 1)\n}\nconst itemsData = ref([])\nonMounted(async () => {\n  const y = await myItems(localStorage.getItem('token'))\n  itemsData.value = y\n})\n\nconst handleDelete = async (row) => {\n  console.log(row)\n  rateSwap({\n    email: localStorage.getItem('token'),\n    rating: rateValue.value[row.swapID],\n    swapID: row.swapID\n  })\n  ElMessage({\n    type: 'info',\n    message: 'rated, reset the form'\n  })\n  await initSwapData()\n  await initMainPage()\n  await initRateFrom()\n  if (rateData.value.length === 0) {\n    ElMessage({\n      type: 'info',\n      message: 'no more swaps need to rate '\n    })\n    dialogUnratedVisible.value = false\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.list-form {\n  margin-left: 350px;\n}\n\n.page-title {\n  font-size: 20px;\n  text-align: left;\n  margin-left: 300px;\n  margin-bottom: 20px;\n}\n\n.item-input {\n  width: 400px;\n}\n\n.item-button {\n  margin-left: 10px;\n  margin-top: 20px;\n}\n\n.items-container {\n  margin-left: 300px;\n  width: 1000px;\n}\n\n.page-title {\n  font-size: 20px;\n  text-align: left;\n  margin-left: 300px;\n  margin-bottom: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}