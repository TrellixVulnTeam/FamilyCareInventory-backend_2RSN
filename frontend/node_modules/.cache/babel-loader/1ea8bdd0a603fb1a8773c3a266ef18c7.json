{"ast":null,"code":"import { useStore } from 'vuex'; // eslint-disable-next-line\n\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { onMounted, ref } from \"vue\";\nimport { myOrders } from \"@/api/myOrder\";\nimport { orderDetail } from \"@/api/orderDetail\";\nimport { deleteOrder } from \"@/api/deleteOrder\";\nimport { addOrder } from '@/api/addOrder';\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const orderForm = ref();\n    const blankOrderForm = {\n      products: [{\n        product_name: '',\n        product_version: '',\n        quantity: '',\n        price: ''\n      }],\n      note: '',\n      trans_time: '',\n      flag: '',\n      total: '',\n      customer_name: '',\n      method: ''\n    };\n\n    const addorder = async () => {\n      // console.log(form)\n      // store.dispatch('app/listItem', form.value)\n      var legacy_total = 0;\n\n      for (let product of orderForm.value.products) {\n        legacy_total += product.price * product.quantity;\n      }\n\n      if (eval(legacy_total) !== eval(orderForm.value.total)) {\n        ElMessage({\n          type: 'error',\n          message: '总成交额与所有商品销售额总和不符，请重新检查'\n        });\n        return;\n      }\n\n      addOrder(orderForm.value, localStorage.getItem('token')).then(() => {\n        // console.log('get returned' + res)\n        ElMessageBox.alert('提交成功！', {\n          confirmButtonText: 'OK',\n          callback: () => {\n            setTimeout(resetOrderForm, 500);\n            ElMessage({\n              type: 'info',\n              message: '已更新列表'\n            });\n          }\n        });\n      }).catch(err => {\n        alert(err);\n      });\n    };\n\n    const addOrderProduct = async () => {\n      orderForm.value.products.push({\n        product_name: '',\n        product_version: '',\n        quantity: '',\n        price: '',\n        key: Date.now()\n      });\n    };\n\n    const removeOrderProduct = product => {\n      var index = orderForm.value.products.indexOf(product);\n\n      if (index !== -1) {\n        orderForm.value.products.splice(index, 1);\n      }\n    };\n\n    const resetOrderForm = async () => {\n      orderForm.value = blankOrderForm;\n    }; // listItem\n    // eslint-disable-next-line\n\n\n    const store = useStore();\n    const ordersData = ref([]);\n    onMounted(async () => {\n      const y = await myOrders(localStorage.getItem('token'));\n      ordersData.value = y;\n    });\n    const showDialog = ref(false);\n    const dialogData = ref([]);\n\n    const handleDetail = async row => {\n      // console.log(1111)\n      // eslint-disable-next-line\n      const x = await orderDetail(row.orderId, localStorage.getItem('token'));\n      showDialog.value = true;\n      dialogData.value = x;\n    };\n\n    const initOrderData = async () => {\n      ordersData.value = [];\n      ordersData.value = await myOrders(localStorage.getItem('token'));\n    };\n\n    const handleDelete = async row => {\n      console.log(row);\n      deleteOrder({\n        token: localStorage.getItem('token'),\n        orderId: row.orderId\n      });\n      ElMessage({\n        type: 'info',\n        message: '已删除'\n      });\n      setTimeout(initOrderData, 1);\n    };\n\n    const focusOnNextItem = nextItemId => {\n      var nextItem = document.getElementById(nextItemId);\n      nextItem.focus();\n    };\n\n    const __returned__ = {\n      orderForm,\n      blankOrderForm,\n      addorder,\n      addOrderProduct,\n      removeOrderProduct,\n      resetOrderForm,\n      store,\n      ordersData,\n      showDialog,\n      dialogData,\n      handleDetail,\n      initOrderData,\n      handleDelete,\n      focusOnNextItem,\n      useStore,\n      ElMessage,\n      ElMessageBox,\n      onMounted,\n      ref,\n      myOrders,\n      orderDetail,\n      deleteOrder,\n      addOrder\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["useStore","ElMessage","ElMessageBox","onMounted","ref","myOrders","orderDetail","deleteOrder","addOrder","orderForm","blankOrderForm","products","product_name","product_version","quantity","price","note","trans_time","flag","total","customer_name","method","addorder","legacy_total","product","value","eval","type","message","localStorage","getItem","then","alert","confirmButtonText","callback","setTimeout","resetOrderForm","catch","err","addOrderProduct","push","key","Date","now","removeOrderProduct","index","indexOf","splice","store","ordersData","y","showDialog","dialogData","handleDetail","row","x","orderId","initOrderData","handleDelete","console","log","token","focusOnNextItem","nextItemId","nextItem","document","getElementById","focus"],"sources":["/Users/alzhong/Personal/Projects/FamilyCareInventory/frontend/src/views/MainView/OrderView/OrderView.vue"],"sourcesContent":["<template>\n  <div class=\"page-title\">\n    <h1>添加成交</h1>\n    <hr style=\"width:50%;text-align:left;margin-left:0\">\n  </div>\n  <div class=\"list-form\">\n    <el-form :model=\"orderForm\" ref=\"form\" label-width=\"100px\">\n      <el-form-item prop=\"note\" label=\"成交抬头\" required>\n        <el-input v-model=\"orderForm.note\" class=\"item-input\" @keyup.enter=\"focusOnNextItem('cn')\"></el-input>\n      </el-form-item>\n      <el-form-item prop=\"customer_name\" label=\"客户名称\" required>\n        <el-input v-model=\"orderForm.customer_name\" class=\"item-input\" @keyup.enter=\"focusOnNextItem('total')\" id=\"cn\"></el-input>\n      </el-form-item>\n      <el-form-item prop=\"total\" label=\"成交额\" required>\n        <el-input v-model=\"orderForm.total\" class=\"item-input\" @keyup.enter=\"focusOnNextItem('tt')\" id=\"total\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"成交日期\" prop=\"trans_time\" required>\n        <el-date-picker\n            type=\"date\" placeholder=\"选择日期\" v-model=\"orderForm.trans_time\" id=\"tt\">\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item label=\"成交方式\" prop=\"flag\" required>\n        <el-radio-group v-model=\"orderForm.flag\">\n          <el-radio label=\"online\">线上</el-radio>\n          <el-radio label=\"offline\">线下</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"支付方式\" prop=\"flag\" required>\n        <el-radio-group v-model=\"orderForm.method\">\n          <el-radio label=\"etransfer\">电子支付</el-radio>\n          <el-radio label=\"cash\">现金</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item v-for=\"(product, index) in orderForm.products\"\n                    :label=\"'商品' + index\"\n                    :key=\"product.key\"\n                    :prop=\"'商品.' + index + '.product_name'\">\n        <el-col :span=\"5\">\n          <el-input v-model=\"product.product_name\" placeholder=\"品名\" style=\"width: 100%;\"></el-input>\n        </el-col>\n        &nbsp;&nbsp;&nbsp;\n        <el-col :span=\"5\">\n          <el-input v-model=\"product.product_version\" placeholder=\"型号\" style=\"width: 100%;\"></el-input>\n        </el-col>\n        &nbsp;&nbsp;&nbsp;\n        <el-col :span=\"5\">\n          <el-input v-model=\"product.quantity\" placeholder=\"数量\" style=\"width: 100%;\"></el-input>\n        </el-col>\n        &nbsp;&nbsp;&nbsp;\n        <el-col :span=\"5\">\n          <el-input v-model=\"product.price\" placeholder=\"单价\" style=\"width: 100%;\"></el-input>\n        </el-col>\n        &nbsp;&nbsp;&nbsp;\n        <el-button @click.prevent=\"removeOrderProduct(product)\">删除</el-button>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"addorder\" class=\"item-button\">提交</el-button>\n        <el-button @click=\"addOrderProduct\" class=\"item-button\">新增商品</el-button>\n        <el-button @click=\"resetOrderForm\" class=\"item-button\">重置</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n  <br/>\n  <br/>\n  <br/>\n  <div class=\"page-title\">\n    <h1>成交列表</h1>\n    <hr style=\"width:50%;text-align:left;margin-left:0\">\n  </div>\n\n  <div class=\"items-container\">\n    <el-table :data=\"ordersData\" style=\"width: 100%\" table-layout: auto>\n      <el-table-column prop=\"note\" label=\"成交抬头\"/>\n      <el-table-column prop=\"note\" label=\"\"/>\n      <el-table-column prop=\"total\" label=\"成交额\"/>\n      <el-table-column prop=\"trans_time\" label=\"成交日期\"/>\n      <el-table-column label=\"商品列表\">\n        <template #default=\"{ row }\">\n          <el-button type=\"text\" size=\"small\" @click=\"handleDetail(row)\"\n          >Detail\n          </el-button\n          >\n        </template>\n      </el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\">\n        <template #default=\"{ row }\">\n          <el-select v-model=\"ordersData[row.orderId]\" class=\"m-2\" placeholder=\"Select\" size=\"small\"\n                     @change=\"handleDelete(row)\">\n            <el-option label=\"删除\" value=0></el-option>\n          </el-select>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog\n        v-model=\"showDialog\"\n    >\n      <el-table :data=\"dialogData\" style=\"width: 100%\" table-layout: auto>\n        <el-table-column prop=\"product_name\" label=\"品名\"/>\n        <el-table-column prop=\"product_version\" label=\"型号\"/>\n        <el-table-column prop=\"quantity\" label=\"数量\"/>\n        <el-table-column prop=\"price\" label=\"单价\"/>\n      </el-table>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { useStore } from 'vuex'\n// eslint-disable-next-line\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport {onMounted, ref} from \"vue\";\nimport {myOrders} from \"@/api/myOrder\"\nimport {orderDetail} from \"@/api/orderDetail\";\nimport {deleteOrder} from \"@/api/deleteOrder\"\nimport { addOrder } from '@/api/addOrder'\n\nconst orderForm = ref()\nconst blankOrderForm = {\n  products: [{\n    product_name: '',\n    product_version: '',\n    quantity: '',\n    price: ''\n  }],\n  note: '',\n  trans_time: '',\n  flag: '',\n  total: '',\n  customer_name: '',\n  method: ''\n}\n\nconst addorder = async () => {\n  // console.log(form)\n  // store.dispatch('app/listItem', form.value)\n  var legacy_total = 0\n  for (let product of orderForm.value.products) {\n    legacy_total += product.price * product.quantity\n  }\n  if (eval(legacy_total) !== eval(orderForm.value.total)) {\n    ElMessage({\n      type: 'error',\n      message: '总成交额与所有商品销售额总和不符，请重新检查'\n    })\n    return\n  }\n  addOrder(orderForm.value, localStorage.getItem('token')).then(() => {\n    // console.log('get returned' + res)\n    ElMessageBox.alert('提交成功！', {\n      confirmButtonText: 'OK',\n      callback: () => {\n        setTimeout(resetOrderForm, 500)\n        ElMessage({\n          type: 'info',\n          message: '已更新列表'\n        })\n      }\n    })\n  }).catch((err) => {\n    alert(err)\n  })\n}\n\nconst addOrderProduct = async() =>{\n  orderForm.value.products.push({\n    product_name: '',\n    product_version: '',\n    quantity: '',\n    price: '',\n    key: Date.now()\n  })}\n\nconst removeOrderProduct = (product) => {\n  var index = orderForm.value.products.indexOf(product)\n  if (index !== -1) {\n    orderForm.value.products.splice(index, 1)\n  }\n}\n\nconst resetOrderForm = async() => {\n  orderForm.value = blankOrderForm\n}\n// listItem\n// eslint-disable-next-line\nconst store = useStore()\nconst ordersData = ref([])\nonMounted(async () => {\n  const y = await myOrders(localStorage.getItem('token'))\n  ordersData.value = y\n})\nconst showDialog = ref(false)\nconst dialogData = ref([])\nconst handleDetail = async (row) => {\n  // console.log(1111)\n  // eslint-disable-next-line\n  const x = await orderDetail(row.orderId, localStorage.getItem('token'))\n  showDialog.value = true\n  dialogData.value = x\n}\nconst initOrderData = async () => {\n  ordersData.value = []\n  ordersData.value = await myOrders(localStorage.getItem('token'))\n}\nconst handleDelete = async (row) => {\n  console.log(row)\n  deleteOrder({\n    token: localStorage.getItem('token'),\n    orderId: row.orderId,\n  })\n  ElMessage({\n    type: 'info',\n    message: '已删除'\n  })\n  setTimeout(initOrderData, 1)\n}\nconst focusOnNextItem = (nextItemId) => {\n  var nextItem = document.getElementById(nextItemId)\n  nextItem.focus()\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.list-form {\n  margin-left: 350px;\n}\n\n.page-title {\n  font-size: 20px;\n  text-align: left;\n  margin-left: 300px;\n  margin-bottom: 20px;\n}\n\n.item-input {\n  width: 400px;\n}\n\n.item-button {\n  margin-left: 10px;\n  margin-top: 20px;\n}\n\n.items-container {\n  margin-left: 300px;\n  width: 1000px;\n}\n\n.page-title {\n  font-size: 20px;\n  text-align: left;\n  margin-left: 300px;\n  margin-bottom: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}