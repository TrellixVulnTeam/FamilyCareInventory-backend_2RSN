{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { ref } from 'vue';\nimport { useStore } from 'vuex';\nimport { listItem } from '@/api/listItem'; // eslint-disable-next-line\n\nimport { ElMessage, ElMessageBox } from 'element-plus'; // import { useStore } from 'vuex'\n\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose(); // const handleList = () => {\n    //   console.log(1)\n    // }\n\n    const form = ref();\n    const blankForm = {\n      title: '',\n      condition: '',\n      description: '',\n      media: '',\n      v_platform: '',\n      c_platform: '',\n      piece: '',\n      game_type: '',\n      owner_email: localStorage.getItem('token')\n    };\n    form.value = blankForm; // listItem\n    // eslint-disable-next-line\n\n    const store = useStore();\n\n    const handleList = async () => {\n      // console.log(form)\n      // store.dispatch('app/listItem', form.value)\n      listItem(form.value).then(res => {\n        // console.log('get returned' + res)\n        ElMessageBox.alert('Your item has been listed!\\nYour item ID is ' + res + '.', 'Title', {\n          confirmButtonText: 'OK',\n          callback: action => {\n            form.value = {\n              title: '',\n              condition: '',\n              description: '',\n              media: '',\n              v_platform: '',\n              c_platform: '',\n              piece: '',\n              game_type: '',\n              owner_email: localStorage.getItem('token')\n            };\n            ElMessage({\n              type: 'info',\n              message: 'this form has been reset'\n            });\n          }\n        });\n      }).catch(err => {\n        alert(err);\n      });\n    };\n    /* eslint-disable */\n\n\n    const ruleFormRef = ref();\n    /* eslint-disable */\n\n    const validateJigsawPiece = (rule, value, callback) => {\n      if (value === '' && form.value.game_type === 'jigsaw') {\n        callback(new Error('Please input the Piece'));\n      } else {\n        callback();\n      }\n    };\n\n    const __returned__ = {\n      form,\n      blankForm,\n      store,\n      handleList,\n      ruleFormRef,\n      validateJigsawPiece,\n      ref,\n      useStore,\n      listItem,\n      ElMessage,\n      ElMessageBox\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":";AA+EA,SAASA,GAAT,QAAoB,KAApB;AACA,SAASC,QAAT,QAAyB,MAAzB;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CACA;;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,cAAxC,C,CACA;;;;;;cARA;IACA;IACA;;IAOA,MAAMC,IAAI,GAAGL,GAAG,EAAhB;IACA,MAAMM,SAAS,GAAG;MAChBC,KAAK,EAAE,EADS;MAEhBC,SAAS,EAAE,EAFK;MAGhBC,WAAW,EAAE,EAHG;MAIhBC,KAAK,EAAE,EAJS;MAKhBC,UAAU,EAAE,EALI;MAMhBC,UAAU,EAAE,EANI;MAOhBC,KAAK,EAAE,EAPS;MAQhBC,SAAS,EAAE,EARK;MAShBC,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;IATG,CAAlB;IAWAZ,IAAI,CAACa,KAAL,GAAaZ,SAAb,EAEA;IACA;;IACA,MAAMa,KAAK,GAAGlB,QAAQ,EAAtB;;IACA,MAAMmB,UAAU,GAAG,YAAY;MAC7B;MACA;MACAlB,QAAQ,CAACG,IAAI,CAACa,KAAN,CAAR,CAAqBG,IAArB,CAA2BC,GAAD,IAAS;QACjC;QACAlB,YAAY,CAACmB,KAAb,CAAmB,iDAAiDD,GAAjD,GAAuD,GAA1E,EAA+E,OAA/E,EAAwF;UACtFE,iBAAiB,EAAE,IADmE;UAEtFC,QAAQ,EAAGC,MAAD,IAAY;YACpBrB,IAAI,CAACa,KAAL,GAAa;cACXX,KAAK,EAAE,EADI;cAEXC,SAAS,EAAE,EAFA;cAGXC,WAAW,EAAE,EAHF;cAIXC,KAAK,EAAE,EAJI;cAKXC,UAAU,EAAE,EALD;cAMXC,UAAU,EAAE,EAND;cAOXC,KAAK,EAAE,EAPI;cAQXC,SAAS,EAAE,EARA;cASXC,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;YATF,CAAb;YAWAd,SAAS,CAAC;cACRwB,IAAI,EAAE,MADE;cAERC,OAAO,EAAE;YAFD,CAAD,CAAT;UAID;QAlBqF,CAAxF;MAoBD,CAtBD,EAsBGC,KAtBH,CAsBUC,GAAD,IAAS;QAChBP,KAAK,CAACO,GAAD,CAAL;MACD,CAxBD;IAyBD,CA5BD;IA6BA;;;IACA,MAAMC,WAAW,GAAG/B,GAAG,EAAvB;IACA;;IACA,MAAMgC,mBAAmB,GAAG,CAACC,IAAD,EAAOf,KAAP,EAAcO,QAAd,KAA2B;MACrD,IAAIP,KAAK,KAAK,EAAV,IAAgBb,IAAI,CAACa,KAAL,CAAWJ,SAAX,KAAuB,QAA3C,EAAqD;QACnDW,QAAQ,CAAC,IAAIS,KAAJ,CAAU,wBAAV,CAAD,CAAR;MACD,CAFD,MAEO;QACLT,QAAQ;MACT;IACF,CAND","names":["ref","useStore","listItem","ElMessage","ElMessageBox","form","blankForm","title","condition","description","media","v_platform","c_platform","piece","game_type","owner_email","localStorage","getItem","value","store","handleList","then","res","alert","confirmButtonText","callback","action","type","message","catch","err","ruleFormRef","validateJigsawPiece","rule","Error"],"sources":["/Users/alzhong/Personal/Projects/FamilyCareInventory/frontend/src/views/MainView/InventoryView/InventoryView.vue"],"sourcesContent":["<template>\n <div class=\"page-title\">\n    <h1>New Item Listing</h1>\n    <hr style=\"width:50%;text-align:left;margin-left:0\">\n  </div>\n  <div class=\"list-form\">\n    <el-form :model=\"form\" label-width=\"100px\">\n\n      <el-form-item label=\"Game Type\">\n        <el-select size=\"large\" class=\"item-input\" placeholder=\"Type\" v-model=\"form.game_type\">\n          <el-option label=\"Board game\" value=\"board game\"/>\n          <el-option label=\"Card game\" value=\"card game\"/>\n          <el-option label=\"Video game\" value=\"video game\"/>\n          <el-option label=\"Computer game\" value=\"computer game\"/>\n          <el-option label=\"Jigsaw puzzle\" value=\"jigsaw\"/>\n        </el-select>\n      </el-form-item>\n\n      <el-form-item label=\"Title\">\n        <el-input class=\"item-input\" size=\"large\" placeholder=\"Game Title\" v-model=\"form.title\"/>\n      </el-form-item>\n\n      <!--        Mint, Like New, Lightly Used, Moderately Used, Heavily Used, or Damaged/Missing parts-->\n      <el-form-item label=\"Condition\">\n        <el-select size=\"large\" class=\"item-input\" placeholder=\"Type\" v-model=\"form.condition\">\n          <el-option label=\"Mint\" value=\"Mint\"/>\n          <el-option label=\"Like New\" value=\"Like New\"/>\n          <el-option label=\"Lightly Used\" value=\"Lightly Used\"/>\n          <el-option label=\"Moderately Used\" value=\"Moderately Used\"/>\n          <el-option label=\"Heavily Used\" value=\"Heavily Used\"/>\n          <el-option label=\"Damaged/Missing parts\" value=\"Damaged/Missing parts\"/>\n        </el-select>\n      </el-form-item>\n\n      <el-form-item label=\"Computer System Platform\" v-if=\"form.game_type==='computer game'\">\n        <el-select size=\"large\" class=\"item-input\" placeholder=\"Platform\" v-model=\"form.c_platform\">\n          <el-option label=\"Mac OS\" value=\"macOS\"/>\n          <el-option label=\"Windows\" value=\"Windows\"/>\n          <el-option label=\"Linux\" value=\"Linux\"/>\n        </el-select>\n      </el-form-item>\n\n      <el-form-item label=\"Game Media\" v-if=\"form.game_type==='video game'\">\n        <el-select size=\"large\" class=\"item-input\" placeholder=\"Media\" v-model=\"form.media\">\n          <el-option label=\"Optical disc\" value=\"Optical disc\"/>\n          <el-option label=\"Game card\" value=\"Game card\"/>\n          <el-option label=\"Cartridge\" value=\"Cartridge\"/>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Console Platform\" v-if=\"form.game_type==='video game'\">\n        <el-select size=\"large\" class=\"item-input\" placeholder=\"Platform\" v-model=\"form.v_platform\">\n          <el-option label=\"Nintendo\" value=\"Nintendo\"/>\n          <el-option label=\"PlayStation\" value=\"PlayStation\"/>\n          <el-option label=\"Xbox\" value=\"Xbox\"/>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"Piece Count\" v-if=\"form.game_type==='jigsaw'\">\n        <el-input-number v-model=\"form.piece\" placeholder=\"Piece\" :step=\"1\" :min=\"1\" :max=\"1000\"/>\n      </el-form-item>\n      <el-form-item label=\"Description\">\n        <el-input\n            :rows=\"4\"\n            type=\"textarea\"\n            class=\"item-input\"\n            placeholder=\"Please input Description\"\n            v-model=\"form.description\"\n        />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"handleList\" class=\"item-button\">List Item</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script setup>\n// const handleList = () => {\n//   console.log(1)\n// }\nimport { ref } from 'vue'\nimport { useStore } from 'vuex'\nimport { listItem } from '@/api/listItem'\n// eslint-disable-next-line\nimport { ElMessage, ElMessageBox } from 'element-plus'\n// import { useStore } from 'vuex'\nconst form = ref()\nconst blankForm = {\n  title: '',\n  condition: '',\n  description: '',\n  media: '',\n  v_platform: '',\n  c_platform: '',\n  piece: '',\n  game_type: '',\n  owner_email: localStorage.getItem('token')\n}\nform.value = blankForm\n\n// listItem\n// eslint-disable-next-line\nconst store = useStore()\nconst handleList = async () => {\n  // console.log(form)\n  // store.dispatch('app/listItem', form.value)\n  listItem(form.value).then((res) => {\n    // console.log('get returned' + res)\n    ElMessageBox.alert('Your item has been listed!\\nYour item ID is ' + res + '.', 'Title', {\n      confirmButtonText: 'OK',\n      callback: (action) => {\n        form.value = {\n          title: '',\n          condition: '',\n          description: '',\n          media: '',\n          v_platform: '',\n          c_platform: '',\n          piece: '',\n          game_type: '',\n          owner_email: localStorage.getItem('token')\n        }\n        ElMessage({\n          type: 'info',\n          message: 'this form has been reset'\n        })\n      }\n    })\n  }).catch((err) => {\n    alert(err)\n  })\n}\n/* eslint-disable */\nconst ruleFormRef = ref()\n/* eslint-disable */\nconst validateJigsawPiece = (rule, value, callback) => {\n  if (value === '' && form.value.game_type==='jigsaw') {\n    callback(new Error('Please input the Piece'))\n  } else {\n    callback()\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.list-form {\n  margin-left: 350px;\n}\n\n.page-title {\n  font-size: 20px;\n  text-align: left;\n  margin-left: 300px;\n  margin-bottom: 20px;\n}\n\n.item-input {\n  width: 400px;\n}\n\n.item-button {\n  margin-left: 10px;\n  margin-top: 20px;\n}\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}