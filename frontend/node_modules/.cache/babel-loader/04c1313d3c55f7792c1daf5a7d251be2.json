{"ast":null,"code":"import { useStore } from 'vuex';\nimport { getZip } from '@/api/getZip';\nimport { onMounted, ref } from 'vue';\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const form = ref({\n      email: '',\n      nickname: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      state: '',\n      city: '',\n      postal_code: '',\n      phone_number: '',\n      phone_type: '',\n      phone_sharing: ''\n    }); // private String email;\n    // private String password;\n    // private String first_name;\n    // private String last_name;\n    // private String nickname;\n    // private String phone_number;\n    // private String phone_type;\n    // private int phone_sharing;\n    // private int postal_code;\n    // private String city;\n    // private String state;\n    // private float latitude;\n    // private float longitude;\n\n    const rules = ref({\n      email: [{\n        required: true,\n        message: 'Please input email',\n        trigger: 'blur'\n      }],\n      nickname: [{\n        required: true,\n        message: 'Please input nickname',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: 'Please input password',\n        trigger: 'blur'\n      }],\n      first_name: [{\n        required: true,\n        message: 'Please input first name',\n        trigger: 'blur'\n      }],\n      last_name: [{\n        required: true,\n        message: 'Please input last name',\n        trigger: 'blur'\n      }],\n      city: [{\n        required: true,\n        message: 'Please input city',\n        trigger: 'blur'\n      }],\n      state: [{\n        required: true,\n        message: 'Please input state',\n        trigger: 'blur'\n      }],\n      postal_code: [{\n        required: true,\n        message: 'Please input postal code',\n        trigger: 'blur'\n      }] // phoneNumber: [\n      //   {\n      //     required: true,\n      //     message: 'Please input Activity password',\n      //     trigger: 'blur'\n      //   }\n      // ],\n\n    });\n    const store = useStore();\n    const formRefRegister = ref(null);\n\n    const handleRegister = () => {\n      formRefRegister.value.validate(async valid => {\n        if (valid) {\n          console.log('valid!');\n          console.log(form.value); // await login(form.value)\n\n          store.dispatch('app/register', form.value);\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    };\n\n    const zipData = ref([]);\n    onMounted(async () => {\n      const x = await getZip();\n      zipData.value = x;\n    });\n    const __returned__ = {\n      form,\n      rules,\n      store,\n      formRefRegister,\n      handleRegister,\n      zipData,\n      useStore,\n      getZip,\n      onMounted,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AA8DA,SAASA,QAAT,QAAyB,MAAzB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,KAA/B;;;;;;IAEA,MAAMC,IAAI,GAAGD,GAAG,CAAC;MACfE,KAAK,EAAE,EADQ;MAEfC,QAAQ,EAAE,EAFK;MAGfC,QAAQ,EAAE,EAHK;MAIfC,UAAU,EAAE,EAJG;MAKfC,SAAS,EAAE,EALI;MAMfC,KAAK,EAAE,EANQ;MAOfC,IAAI,EAAE,EAPS;MAQfC,WAAW,EAAE,EARE;MASfC,YAAY,EAAE,EATC;MAUfC,UAAU,EAAE,EAVG;MAWfC,aAAa,EAAE;IAXA,CAAD,CAAhB,EAcA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMC,KAAK,GAAGb,GAAG,CAAC;MAChBE,KAAK,EAAE,CACL;QACEY,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,oBAFX;QAGEC,OAAO,EAAE;MAHX,CADK,CADS;MAQhBb,QAAQ,EAAE,CACR;QACEW,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,uBAFX;QAGEC,OAAO,EAAE;MAHX,CADQ,CARM;MAehBZ,QAAQ,EAAE,CACR;QACEU,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,uBAFX;QAGEC,OAAO,EAAE;MAHX,CADQ,CAfM;MAsBhBX,UAAU,EAAE,CACV;QACES,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,yBAFX;QAGEC,OAAO,EAAE;MAHX,CADU,CAtBI;MA6BhBV,SAAS,EAAE,CACT;QACEQ,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,wBAFX;QAGEC,OAAO,EAAE;MAHX,CADS,CA7BK;MAoChBR,IAAI,EAAE,CACJ;QACEM,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,mBAFX;QAGEC,OAAO,EAAE;MAHX,CADI,CApCU;MA2ChBT,KAAK,EAAE,CACL;QACEO,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,oBAFX;QAGEC,OAAO,EAAE;MAHX,CADK,CA3CS;MAkDhBP,WAAW,EAAE,CACX;QACEK,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,0BAFX;QAGEC,OAAO,EAAE;MAHX,CADW,CAlDG,CAyDhB;MACA;MACA;MACA;MACA;MACA;MACA;;IA/DgB,CAAD,CAAjB;IAkEA,MAAMC,KAAK,GAAGpB,QAAQ,EAAtB;IACA,MAAMqB,eAAe,GAAGlB,GAAG,CAAC,IAAD,CAA3B;;IACA,MAAMmB,cAAc,GAAG,MAAM;MAC3BD,eAAe,CAACE,KAAhB,CAAsBC,QAAtB,CAA+B,MAAOC,KAAP,IAAiB;QAC9C,IAAIA,KAAJ,EAAW;UACTC,OAAO,CAACC,GAAR,CAAY,QAAZ;UACAD,OAAO,CAACC,GAAR,CAAYvB,IAAI,CAACmB,KAAjB,EAFS,CAGT;;UACAH,KAAK,CAACQ,QAAN,CAAe,cAAf,EAA+BxB,IAAI,CAACmB,KAApC;QACD,CALD,MAKO;UACLG,OAAO,CAACC,GAAR,CAAY,gBAAZ;UACA,OAAO,KAAP;QACD;MACF,CAVD;IAWD,CAZD;;IAcA,MAAME,OAAO,GAAG1B,GAAG,CAAC,EAAD,CAAnB;IACAD,SAAS,CAAC,YAAY;MACpB,MAAM4B,CAAC,GAAG,MAAM7B,MAAM,EAAtB;MACA4B,OAAO,CAACN,KAAR,GAAgBO,CAAhB;IACD,CAHQ,CAAT","names":["useStore","getZip","onMounted","ref","form","email","nickname","password","first_name","last_name","state","city","postal_code","phone_number","phone_type","phone_sharing","rules","required","message","trigger","store","formRefRegister","handleRegister","value","validate","valid","console","log","dispatch","zipData","x"],"sources":["/Users/alzhong/Personal/Projects/FamilyCareInventory/frontend/src/views/RegisterView/RegisterView.vue"],"sourcesContent":["<template>\n  <el-form :model=\"form\" ref=\"formRefRegister\" class=\"register-form\" label-width=\"200px\" :rules=\"rules\">\n    <div>\n      <h3 style=\"margin-left:50px; text-align:left; margin-bottom:50px;\">Registration</h3>\n    </div>\n    <el-form-item label=\"Email\"  class=\"register-input\" prop=\"email\">\n      <el-input required v-model=\"form.email\" size=\"large\" placeholder=\"Email\" />\n    </el-form-item>\n\n    <el-form-item label=\"Nickname\" class=\"register-input\" prop=\"nickname\">\n      <el-input v-model=\"form.nickname\" size=\"large\" placeholder=\"Nickname\" />\n    </el-form-item>\n\n    <el-form-item label=\"Password\" class=\"register-input\" prop=\"password\">\n      <el-input v-model=\"form.password\" size=\"large\" placeholder=\"Password\" />\n    </el-form-item>\n\n    <el-form-item label=\"First Name\" class=\"register-input\" prop=\"first_name\">\n      <el-input v-model=\"form.first_name\" size=\"large\" placeholder=\"First Name\" />\n    </el-form-item>\n\n    <el-form-item label=\"Last Name\" class=\"register-input\" prop=\"last_name\">\n      <el-input v-model=\"form.last_name\" size=\"large\" placeholder=\"Last Name\" />\n    </el-form-item>\n\n    <el-form-item label=\"State\" class=\"register-input\" prop=\"state\">\n      <el-select v-model=\"form.state\" size=\"large\" placeholder=\"State\">\n        <el-option v-for=\"item in zipData\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n      </el-select>\n    </el-form-item>\n\n    <el-form-item label=\"City\" class=\"register-input\" prop=\"city\">\n      <el-input v-model=\"form.city\" size=\"large\" placeholder=\"City\" />\n    </el-form-item>\n\n    <el-form-item label=\"Postal Code\" class=\"register-input\" prop=\"postal_code\">\n      <el-input v-model=\"form.postal_code\" size=\"large\" placeholder=\"Postal Code\" />\n    </el-form-item>\n\n    <el-form-item label=\"Phone number (optional)\" class=\"register-input\">\n      <el-input v-model=\"form.phone_number\" size=\"large\" placeholder=\"Phone number\" />\n    </el-form-item>\n\n    <el-form-item label=\"Type\" class=\"register-input\">\n      <el-select v-model=\"form.phone_type\" size=\"large\" placeholder=\"Type\">\n        <el-option label=\"Home\" value=\"Home\"/>\n        <el-option label=\"Work\" value=\"Work\"/>\n        <el-option label=\"Mobile\" value=\"Mobile\"/>\n      </el-select>\n    </el-form-item>\n\n    <el-form-item>\n      <el-checkbox v-model=\"form.phone_sharing\" true-label=1 false-label=0 >Show phone number in swaps</el-checkbox>\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" @click=\"handleRegister\">Register</el-button>\n    </el-form-item>\n\n  </el-form>\n</template>\n\n<script setup>\nimport { useStore } from 'vuex'\nimport { getZip } from '@/api/getZip'\nimport { onMounted, ref } from 'vue'\n\nconst form = ref({\n  email: '',\n  nickname: '',\n  password: '',\n  first_name: '',\n  last_name: '',\n  state: '',\n  city: '',\n  postal_code: '',\n  phone_number: '',\n  phone_type: '',\n  phone_sharing: ''\n})\n\n// private String email;\n// private String password;\n// private String first_name;\n// private String last_name;\n// private String nickname;\n// private String phone_number;\n// private String phone_type;\n// private int phone_sharing;\n// private int postal_code;\n// private String city;\n// private String state;\n// private float latitude;\n// private float longitude;\n\nconst rules = ref({\n  email: [\n    {\n      required: true,\n      message: 'Please input email',\n      trigger: 'blur'\n    }\n  ],\n  nickname: [\n    {\n      required: true,\n      message: 'Please input nickname',\n      trigger: 'blur'\n    }\n  ],\n  password: [\n    {\n      required: true,\n      message: 'Please input password',\n      trigger: 'blur'\n    }\n  ],\n  first_name: [\n    {\n      required: true,\n      message: 'Please input first name',\n      trigger: 'blur'\n    }\n  ],\n  last_name: [\n    {\n      required: true,\n      message: 'Please input last name',\n      trigger: 'blur'\n    }\n  ],\n  city: [\n    {\n      required: true,\n      message: 'Please input city',\n      trigger: 'blur'\n    }\n  ],\n  state: [\n    {\n      required: true,\n      message: 'Please input state',\n      trigger: 'blur'\n    }\n  ],\n  postal_code: [\n    {\n      required: true,\n      message: 'Please input postal code',\n      trigger: 'blur'\n    }\n  ]\n  // phoneNumber: [\n  //   {\n  //     required: true,\n  //     message: 'Please input Activity password',\n  //     trigger: 'blur'\n  //   }\n  // ],\n}\n)\nconst store = useStore()\nconst formRefRegister = ref(null)\nconst handleRegister = () => {\n  formRefRegister.value.validate(async (valid) => {\n    if (valid) {\n      console.log('valid!')\n      console.log(form.value)\n      // await login(form.value)\n      store.dispatch('app/register', form.value)\n    } else {\n      console.log('error submit!!')\n      return false\n    }\n  })\n}\n\nconst zipData = ref([])\nonMounted(async () => {\n  const x = await getZip()\n  zipData.value = x\n})\n</script>\n\n<style lang=\"scss\" scoped>\n$bg: #2d3a4b;\n$dark_gray: #889aa4;\n$light_gray: #eee;\n$cursor: #fff;\n\n.register-input {\n  width: 400px;\n  margin-left: 50px;\n}\n\n.login-container {\n  min-height: 100%;\n  width: 100%;\n  background-color: $bg;\n  overflow: hidden;\n\n  .register-form {\n    position: relative;\n    width: 50px;\n    max-width: 100%;\n    padding: 160px 35px 0;\n    margin: 0 auto;\n    overflow: hidden;\n\n    ::v-deep .el-form-item {\n      border: 1px solid rgba(255, 255, 255, 0.1);\n      background: rgba(0, 0, 0, 0.1);\n      border-radius: 5px;\n      color: #454545;\n    }\n\n    ::v-deep .el-input {\n      display: inline-block;\n      height: 47px;\n      width: 40px;\n\n      input {\n        background: transparent;\n        border: 0px;\n        -webkit-appearance: none;\n        border-radius: 0px;\n        padding: 12px 5px 12px 15px;\n        color: $light_gray;\n        height: 47px;\n        caret-color: $cursor;\n      }\n    }\n\n    .login-button {\n      width: 100%;\n      box-sizing: border-box;\n    }\n  }\n\n  .tips {\n    font-size: 16px;\n    line-height: 28px;\n    color: #fff;\n    margin-bottom: 10px;\n\n    span {\n      &:first-of-type {\n        margin-right: 16px;\n      }\n    }\n  }\n\n  .svg-container {\n    padding: 6px 5px 6px 15px;\n    color: $dark_gray;\n    vertical-align: middle;\n    display: inline-block;\n  }\n\n  .title-container {\n    position: relative;\n\n    .title {\n      font-size: 26px;\n      color: $light_gray;\n      margin: 0px auto 40px auto;\n      text-align: center;\n      font-weight: bold;\n    }\n\n    ::v-deep .lang-select {\n      position: absolute;\n      top: 4px;\n      right: 0;\n      background-color: white;\n      font-size: 22px;\n      padding: 4px;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n  }\n\n  .show-pwd {\n    // position: absolute;\n    // right: 10px;\n    // top: 7px;\n    font-size: 16px;\n    color: $dark_gray;\n    cursor: pointer;\n    user-select: none;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}