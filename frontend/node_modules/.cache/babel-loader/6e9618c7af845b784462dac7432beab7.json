{"ast":null,"code":"import { useStore } from 'vuex';\nimport { addBuy } from '@/api/addBuy'; // eslint-disable-next-line\n\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { onMounted, ref } from \"vue\";\nimport { myBuys } from \"@/api/myBuy\";\nimport { buyDetail } from \"@/api/buyDetail\";\nimport { deleteBuy } from \"@/api/deleteBuy\";\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const orderForm = ref({\n      products: [{\n        product_name: '',\n        product_version: '',\n        quantity: '',\n        price: ''\n      }],\n      note: '',\n      trans_time: '',\n      flag: ''\n    });\n\n    const addbuy = async () => {\n      // console.log(form)\n      // store.dispatch('app/listItem', form.value)\n      await initBuyData();\n      addBuy(purchaseForm.value, localStorage.getItem('token')).then(() => {\n        // console.log('get returned' + res)\n        ElMessageBox.alert('提交成功！', {\n          confirmButtonText: 'OK',\n          callback: () => {\n            orderForm.value = {\n              products: [{\n                product_name: '',\n                product_version: '',\n                quantity: '',\n                price: ''\n              }],\n              note: '',\n              trans_time: '',\n              flag: ''\n            };\n            ElMessage({\n              type: 'info',\n              message: '已更新列表'\n            });\n          }\n        });\n      }).catch(err => {\n        alert(err);\n      });\n      setTimeout(initBuyData, 1);\n    };\n\n    const addOrderProduct = async () => {\n      orderForm.value.products.push({\n        product_name: '',\n        product_version: '',\n        quantity: '',\n        price: '',\n        key: Date.now()\n      });\n    };\n\n    const removeOrderProduct = product => {\n      var index = orderForm.value.products.indexOf(product);\n\n      if (index !== -1) {\n        orderForm.value.products.splice(index, 1);\n      }\n    };\n\n    const resetOrderForm = async () => {\n      orderForm.value = {\n        products: [{\n          product_name: '',\n          product_version: '',\n          quantity: '',\n          price: ''\n        }],\n        note: '',\n        deposit: '',\n        buy_time: ''\n      };\n    }; // listItem\n    // eslint-disable-next-line\n\n\n    const store = useStore();\n    const ordersData = ref([]);\n    onMounted(async () => {\n      const y = await myOrders(localStorage.getItem('token'));\n      ordersData.value = y;\n    });\n    const showDialog = ref(false);\n    const dialogData = ref([]);\n\n    const handleDetail = async row => {\n      // console.log(1111)\n      // eslint-disable-next-line\n      const x = await orderDetail(row.buyId, localStorage.getItem('token'));\n      console.log(x);\n      showDialog.value = true;\n      dialogData.value = x;\n    };\n\n    const initBuyData = async () => {\n      buysData.value = [];\n      buysData.value = await myBuys(localStorage.getItem('token'));\n    };\n\n    const handleDelete = async row => {\n      console.log(row);\n      deleteBuy({\n        token: localStorage.getItem('token'),\n        buyId: row.buyId\n      });\n      ElMessage({\n        type: 'info',\n        message: '已删除'\n      });\n      setTimeout(initBuyData, 1);\n    };\n\n    const __returned__ = {\n      orderForm,\n      addbuy,\n      addOrderProduct,\n      removeOrderProduct,\n      resetOrderForm,\n      store,\n      ordersData,\n      showDialog,\n      dialogData,\n      handleDetail,\n      initBuyData,\n      handleDelete,\n      useStore,\n      addBuy,\n      ElMessage,\n      ElMessageBox,\n      onMounted,\n      ref,\n      myBuys,\n      buyDetail,\n      deleteBuy\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["useStore","addBuy","ElMessage","ElMessageBox","onMounted","ref","myBuys","buyDetail","deleteBuy","orderForm","products","product_name","product_version","quantity","price","note","trans_time","flag","addbuy","initBuyData","purchaseForm","value","localStorage","getItem","then","alert","confirmButtonText","callback","type","message","catch","err","setTimeout","addOrderProduct","push","key","Date","now","removeOrderProduct","product","index","indexOf","splice","resetOrderForm","deposit","buy_time","store","ordersData","y","myOrders","showDialog","dialogData","handleDetail","row","x","orderDetail","buyId","console","log","buysData","handleDelete","token"],"sources":["/Users/alzhong/Personal/Projects/FamilyCareInventory/frontend/src/views/MainView/OrderView/OrderView.vue"],"sourcesContent":["<template>\n  <div class=\"page-title\">\n    <h1>添加成交</h1>\n    <hr style=\"width:50%;text-align:left;margin-left:0\">\n  </div>\n  <div class=\"list-form\">\n    <el-form :model=\"purchaseForm\" ref=\"form\" label-width=\"100px\">\n      <el-form-item prop=\"note\" label=\"成交抬头\" required>\n        <el-input v-model=\"purchaseForm.note\" class=\"item-input\"></el-input>\n      </el-form-item>\n      <el-form-item prop=\"note\" label=\"客户名称\" required>\n        <el-input v-model=\"purchaseForm.note\" class=\"item-input\"></el-input>\n      </el-form-item>\n      <el-form-item prop=\"deposit\" label=\"成交额\" required>\n        <el-input v-model=\"purchaseForm.deposit\" class=\"item-input\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"成交日期\" prop=\"buy_time\" required>\n        <el-date-picker\n            type=\"date\" placeholder=\"选择日期\" v-model=\"purchaseForm.buy_time\">\n        </el-date-picker>\n      </el-form-item>\n      <el-form-item label=\"成交方式\" prop=\"resource\" required>\n        <el-radio-group v-model=\"purchaseForm.resource\">\n          <el-radio label=\"线上\" value=\"online\"></el-radio>\n          <el-radio label=\"线下\" value=\"offline\"></el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item v-for=\"(product, index) in purchaseForm.products\"\n                    :label=\"'商品' + index\"\n                    :key=\"product.key\"\n                    :prop=\"'商品.' + index + '.product_name'\">\n        <el-col :span=\"3\">\n          <el-input v-model=\"product.product_name\" placeholder=\"品名\" style=\"width: 100%;\"></el-input>\n        </el-col>\n        &nbsp;&nbsp;&nbsp;\n        <el-col :span=\"3\">\n          <el-input v-model=\"product.product_version\" placeholder=\"型号\" style=\"width: 100%;\"></el-input>\n        </el-col>\n        &nbsp;&nbsp;&nbsp;\n        <el-col :span=\"3\">\n          <el-input v-model=\"product.quantity\" placeholder=\"数量\" style=\"width: 100%;\"></el-input>\n        </el-col>\n        &nbsp;&nbsp;&nbsp;\n        <el-col :span=\"3\">\n          <el-input v-model=\"product.price\" placeholder=\"单价\" style=\"width: 100%;\" required></el-input>\n        </el-col>\n        &nbsp;&nbsp;&nbsp;\n        <el-button @click.prevent=\"removeProduct(product)\">删除</el-button>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"addbuy\" class=\"item-button\">提交</el-button>\n        <el-button @click=\"addProduct\" class=\"item-button\">新增商品</el-button>\n        <el-button @click=\"resetForm\" class=\"item-button\">重置</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n  <br/>\n  <br/>\n  <br/>\n  <div class=\"page-title\">\n    <h1>成交列表</h1>\n    <hr style=\"width:50%;text-align:left;margin-left:0\">\n  </div>\n\n  <div class=\"items-container\">\n    <el-table :data=\"buysData\" style=\"width: 100%\" table-layout: auto>\n      <el-table-column prop=\"note\" label=\"成交抬头\"/>\n      <el-table-column prop=\"deposit\" label=\"成交额\"/>\n      <el-table-column prop=\"buy_time\" label=\"成交日期\"/>\n      <el-table-column label=\"商品列表\">\n        <template #default=\"{ row }\">\n          <el-button type=\"text\" size=\"small\" @click=\"handleDetail(row)\"\n          >Detail\n          </el-button\n          >\n        </template>\n      </el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\">\n        <template #default=\"{ row }\">\n          <el-select v-model=\"buysData[row.buyId]\" class=\"m-2\" placeholder=\"Select\" size=\"small\"\n                     @change=\"handleDelete(row)\">\n            <el-option label=\"删除\" value=0></el-option>\n          </el-select>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog\n        v-model=\"showDialog\"\n    >\n      <el-table :data=\"dialogData\" style=\"width: 100%\" table-layout: auto>\n        <el-table-column prop=\"product_name\" label=\"品名\"/>\n        <el-table-column prop=\"product_version\" label=\"型号\"/>\n        <el-table-column prop=\"quantity\" label=\"数量\"/>\n        <el-table-column prop=\"price\" label=\"单价\"/>\n      </el-table>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { useStore } from 'vuex'\nimport { addBuy } from '@/api/addBuy'\n// eslint-disable-next-line\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport {onMounted, ref} from \"vue\";\nimport {myBuys} from \"@/api/myBuy\"\nimport {buyDetail} from \"@/api/buyDetail\";\nimport {deleteBuy} from \"@/api/deleteBuy\"\n\nconst orderForm = ref({\n  products: [{\n    product_name: '',\n    product_version: '',\n    quantity: '',\n    price: ''\n  }],\n  note: '',\n  trans_time: '',\n  flag: ''\n})\n\nconst addbuy = async () => {\n  // console.log(form)\n  // store.dispatch('app/listItem', form.value)\n  await initBuyData()\n  addBuy(purchaseForm.value, localStorage.getItem('token')).then(() => {\n    // console.log('get returned' + res)\n    ElMessageBox.alert('提交成功！', {\n      confirmButtonText: 'OK',\n      callback: () => {\n        orderForm.value = {\n          products: [{\n            product_name: '',\n            product_version: '',\n            quantity: '',\n            price: ''\n          }],\n          note: '',\n          trans_time: '',\n          flag: ''\n        }\n        ElMessage({\n          type: 'info',\n          message: '已更新列表'\n        })\n      }\n    })\n  }).catch((err) => {\n    alert(err)\n  })\n  setTimeout(initBuyData, 1)\n}\n\nconst addOrderProduct = async() =>{\n  orderForm.value.products.push({\n    product_name: '',\n    product_version: '',\n    quantity: '',\n    price: '',\n    key: Date.now()\n  })}\n\nconst removeOrderProduct = (product) => {\n  var index = orderForm.value.products.indexOf(product)\n  if (index !== -1) {\n    orderForm.value.products.splice(index, 1)\n  }\n}\n\nconst resetOrderForm = async() =>{\n  orderForm.value = {\n    products: [{\n      product_name: '',\n      product_version: '',\n      quantity: '',\n      price: ''\n    }],\n    note: '',\n    deposit: '',\n    buy_time: ''\n  }\n}\n\n// listItem\n// eslint-disable-next-line\nconst store = useStore()\nconst ordersData = ref([])\nonMounted(async () => {\n  const y = await myOrders(localStorage.getItem('token'))\n  ordersData.value = y\n})\nconst showDialog = ref(false)\nconst dialogData = ref([])\nconst handleDetail = async (row) => {\n  // console.log(1111)\n  // eslint-disable-next-line\n  const x = await orderDetail(row.buyId, localStorage.getItem('token'))\n  console.log(x)\n  showDialog.value = true\n  dialogData.value = x\n}\nconst initBuyData = async () => {\n  buysData.value = []\n  buysData.value = await myBuys(localStorage.getItem('token'))\n}\nconst handleDelete = async (row) => {\n  console.log(row)\n  deleteBuy({\n    token: localStorage.getItem('token'),\n    buyId: row.buyId,\n  })\n  ElMessage({\n    type: 'info',\n    message: '已删除'\n  })\n  setTimeout(initBuyData, 1)\n}\n</script>\n\n<style scoped lang=\"scss\">\n\n.list-form {\n  margin-left: 350px;\n}\n\n.page-title {\n  font-size: 20px;\n  text-align: left;\n  margin-left: 300px;\n  margin-bottom: 20px;\n}\n\n.item-input {\n  width: 400px;\n}\n\n.item-button {\n  margin-left: 10px;\n  margin-top: 20px;\n}\n\n.items-container {\n  margin-left: 300px;\n  width: 1000px;\n}\n\n.page-title {\n  font-size: 20px;\n  text-align: left;\n  margin-left: 300px;\n  margin-bottom: 20px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}