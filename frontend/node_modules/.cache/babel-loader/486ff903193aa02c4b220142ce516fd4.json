{"ast":null,"code":"import { onMounted, ref } from 'vue';\nimport { getRegistrationForm } from '@/api/getRegistrationForm';\nimport { updateUser } from '@/api/updateUser';\nimport { getZip } from '@/api/getZip';\nimport { ElMessageBox } from 'element-plus';\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const form = ref([]);\n    onMounted(async () => {\n      const x = await getRegistrationForm(localStorage.getItem('token'));\n      form.value = x;\n    }); // private String email;\n    // private String password;\n    // private String first_name;\n    // private String last_name;\n    // private String nickname;\n    // private String phone_number;\n    // private String phone_type;\n    // private int phone_sharing;\n    // private int postal_code;\n    // private String city;\n    // private String state;\n    // private float latitude;\n    // private float longitude;\n\n    const rules = ref({\n      nickname: [{\n        required: true,\n        message: 'Please input nickname',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: 'Please input password',\n        trigger: 'blur'\n      }],\n      first_name: [{\n        required: true,\n        message: 'Please input first name',\n        trigger: 'blur'\n      }],\n      last_name: [{\n        required: true,\n        message: 'Please input last name',\n        trigger: 'blur'\n      }],\n      city: [{\n        required: true,\n        message: 'Please input city',\n        trigger: 'blur'\n      }],\n      state: [{\n        required: true,\n        message: 'Please input state',\n        trigger: 'blur'\n      }],\n      postal_code: [{\n        required: true,\n        message: 'Please input postal code',\n        trigger: 'blur'\n      }] // phoneNumber: [\n      //   {\n      //     required: true,\n      //     message: 'Please input Activity password',\n      //     trigger: 'blur'\n      //   }\n      // ],\n\n    });\n\n    const initUpdateUserInfoPage = async () => {\n      const prefilldata = await getRegistrationForm(localStorage.getItem('token'));\n      form.value = prefilldata;\n    };\n\n    const zipData = ref([]);\n    onMounted(async () => {\n      const x = await getZip();\n      zipData.value = x;\n    });\n\n    const handleUpdateUser = async () => {\n      await updateUser(form.value);\n      await ElMessageBox.alert('Your profile is updated', {\n        confirmButtonText: 'OK',\n        dangerouslyUseHTMLString: true\n      });\n      await initUpdateUserInfoPage;\n    };\n\n    const __returned__ = {\n      form,\n      rules,\n      initUpdateUserInfoPage,\n      zipData,\n      handleUpdateUser,\n      onMounted,\n      ref,\n      getRegistrationForm,\n      updateUser,\n      getZip,\n      ElMessageBox\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AAkEA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,KAA/B;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,YAAT,QAA6B,cAA7B;;;;;;IACA,MAAMC,IAAI,GAAGL,GAAG,CAAC,EAAD,CAAhB;IACAD,SAAS,CAAC,YAAY;MACpB,MAAMO,CAAC,GAAG,MAAML,mBAAmB,CAACM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAnC;MACAH,IAAI,CAACI,KAAL,GAAaH,CAAb;IACD,CAHQ,CAAT,EAKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMI,KAAK,GAAGV,GAAG,CAAC;MAChBW,QAAQ,EAAE,CACR;QACEC,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,uBAFX;QAGEC,OAAO,EAAE;MAHX,CADQ,CADM;MAQhBC,QAAQ,EAAE,CACR;QACEH,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,uBAFX;QAGEC,OAAO,EAAE;MAHX,CADQ,CARM;MAehBE,UAAU,EAAE,CACV;QACEJ,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,yBAFX;QAGEC,OAAO,EAAE;MAHX,CADU,CAfI;MAsBhBG,SAAS,EAAE,CACT;QACEL,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,wBAFX;QAGEC,OAAO,EAAE;MAHX,CADS,CAtBK;MA6BhBI,IAAI,EAAE,CACJ;QACEN,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,mBAFX;QAGEC,OAAO,EAAE;MAHX,CADI,CA7BU;MAoChBK,KAAK,EAAE,CACL;QACEP,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,oBAFX;QAGEC,OAAO,EAAE;MAHX,CADK,CApCS;MA2ChBM,WAAW,EAAE,CACX;QACER,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE,0BAFX;QAGEC,OAAO,EAAE;MAHX,CADW,CA3CG,CAkDhB;MACA;MACA;MACA;MACA;MACA;MACA;;IAxDgB,CAAD,CAAjB;;IA4DA,MAAMO,sBAAsB,GAAG,YAAY;MACzC,MAAMC,WAAW,GAAG,MAAMrB,mBAAmB,CAACM,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAA7C;MACAH,IAAI,CAACI,KAAL,GAAaa,WAAb;IACD,CAHD;;IAKA,MAAMC,OAAO,GAAGvB,GAAG,CAAC,EAAD,CAAnB;IACAD,SAAS,CAAC,YAAY;MACpB,MAAMO,CAAC,GAAG,MAAMH,MAAM,EAAtB;MACAoB,OAAO,CAACd,KAAR,GAAgBH,CAAhB;IACD,CAHQ,CAAT;;IAKA,MAAMkB,gBAAgB,GAAG,YAAY;MACnC,MAAMtB,UAAU,CAACG,IAAI,CAACI,KAAN,CAAhB;MACA,MAAML,YAAY,CAACqB,KAAb,CAAmB,yBAAnB,EAA8C;QAClDC,iBAAiB,EAAE,IAD+B;QAElDC,wBAAwB,EAAE;MAFwB,CAA9C,CAAN;MAKA,MAAMN,sBAAN;IACD,CARD","names":["onMounted","ref","getRegistrationForm","updateUser","getZip","ElMessageBox","form","x","localStorage","getItem","value","rules","nickname","required","message","trigger","password","first_name","last_name","city","state","postal_code","initUpdateUserInfoPage","prefilldata","zipData","handleUpdateUser","alert","confirmButtonText","dangerouslyUseHTMLString"],"sources":["/Users/alzhong/Personal/Projects/FamilyCareInventory/frontend/src/views/MainView/UpdateMyInfoView/UpdateMyInfoView.vue"],"sourcesContent":["<template>\n  <div class=\"page-title\">\n      <h1>Update My Information</h1>\n      <hr style=\"width:50%;text-align:left;margin-left:0\">\n  </div>\n\n  <div class=\"list-form\">\n    <el-form :model=\"form\" ref=\"formRefUpdate\" class=\"register-form\" label-width=\"200px\" :rules=\"rules\">\n      <el-form-item label=\"Email\"  class=\"register-input\" prop=\"email\">\n        <el-input required v-model=\"form.email\" size=\"large\" placeholder=\"Email\" disabled />\n      </el-form-item>\n\n      <el-form-item label=\"Nickname\" class=\"register-input\" prop=\"nickname\">\n        <el-input v-model=\"form.nickname\" size=\"large\" placeholder=\"Nickname\" />\n      </el-form-item>\n\n      <el-form-item label=\"Password\" class=\"register-input\" prop=\"password\">\n        <el-input v-model=\"form.password\" size=\"large\" placeholder=\"Password\" />\n      </el-form-item>\n\n      <el-form-item label=\"First Name\" class=\"register-input\" prop=\"first_name\">\n        <el-input v-model=\"form.first_name\" size=\"large\" placeholder=\"First Name\" />\n      </el-form-item>\n\n      <el-form-item label=\"Last Name\" class=\"register-input\" prop=\"last_name\">\n        <el-input v-model=\"form.last_name\" size=\"large\" placeholder=\"Last Name\" />\n      </el-form-item>\n\n    <el-form-item label=\"State\" class=\"register-input\" prop=\"state\">\n      <el-select v-model=\"form.state\" size=\"large\" placeholder=\"State\">\n        <el-option v-for=\"item in zipData\" :key=\"item\" :label=\"item\" :value=\"item\"></el-option>\n      </el-select>\n    </el-form-item>\n\n    <el-form-item label=\"City\" class=\"register-input\" prop=\"city\">\n      <el-input v-model=\"form.city\" size=\"large\" placeholder=\"City\" />\n    </el-form-item>\n\n      <el-form-item label=\"Postal Code\" class=\"register-input\" prop=\"postal_code\">\n        <el-input v-model=\"form.postal_code\" size=\"large\" placeholder=\"Postal Code\" prop=\"postal_code\"/>\n      </el-form-item>\n\n      <el-form-item label=\"Phone number (optional)\" class=\"register-input\">\n        <el-input v-model=\"form.phone_number\" size=\"large\" placeholder=\"Phone number\" />\n      </el-form-item>\n\n      <el-form-item label=\"Type\" class=\"register-input\">\n        <el-select v-model=\"form.phone_type\" size=\"large\" placeholder=\"Type\">\n          <el-option label=\"Home\" value=\"Home\"/>\n          <el-option label=\"Work\" value=\"Work\"/>\n          <el-option label=\"Mobile\" value=\"Mobile\"/>\n        </el-select>\n      </el-form-item>\n\n      <el-form-item>\n        <el-checkbox :checked=\"form.phone_sharing==1? true:false\" v-model=\"form.phone_sharing\" :true-label=1 :false-label=0 >Show phone number in swaps</el-checkbox>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"handleUpdateUser()\">Update</el-button>\n      </el-form-item>\n\n    </el-form>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport { getRegistrationForm } from '@/api/getRegistrationForm'\nimport { updateUser } from '@/api/updateUser'\nimport { getZip } from '@/api/getZip'\nimport { ElMessageBox } from 'element-plus'\nconst form = ref([])\nonMounted(async () => {\n  const x = await getRegistrationForm(localStorage.getItem('token'))\n  form.value = x\n})\n\n// private String email;\n// private String password;\n// private String first_name;\n// private String last_name;\n// private String nickname;\n// private String phone_number;\n// private String phone_type;\n// private int phone_sharing;\n// private int postal_code;\n// private String city;\n// private String state;\n// private float latitude;\n// private float longitude;\n\nconst rules = ref({\n  nickname: [\n    {\n      required: true,\n      message: 'Please input nickname',\n      trigger: 'blur'\n    }\n  ],\n  password: [\n    {\n      required: true,\n      message: 'Please input password',\n      trigger: 'blur'\n    }\n  ],\n  first_name: [\n    {\n      required: true,\n      message: 'Please input first name',\n      trigger: 'blur'\n    }\n  ],\n  last_name: [\n    {\n      required: true,\n      message: 'Please input last name',\n      trigger: 'blur'\n    }\n  ],\n  city: [\n    {\n      required: true,\n      message: 'Please input city',\n      trigger: 'blur'\n    }\n  ],\n  state: [\n    {\n      required: true,\n      message: 'Please input state',\n      trigger: 'blur'\n    }\n  ],\n  postal_code: [\n    {\n      required: true,\n      message: 'Please input postal code',\n      trigger: 'blur'\n    }\n  ]\n  // phoneNumber: [\n  //   {\n  //     required: true,\n  //     message: 'Please input Activity password',\n  //     trigger: 'blur'\n  //   }\n  // ],\n}\n)\n\nconst initUpdateUserInfoPage = async () => {\n  const prefilldata = await getRegistrationForm(localStorage.getItem('token'))\n  form.value = prefilldata\n}\n\nconst zipData = ref([])\nonMounted(async () => {\n  const x = await getZip()\n  zipData.value = x\n})\n\nconst handleUpdateUser = async () => {\n  await updateUser(form.value)\n  await ElMessageBox.alert('Your profile is updated', {\n    confirmButtonText: 'OK',\n    dangerouslyUseHTMLString: true\n  }\n  )\n  await initUpdateUserInfoPage\n}\n</script>\n\n<style lang=\"scss\" scoped>\n$bg: #2d3a4b;\n$dark_gray: #889aa4;\n$light_gray: #eee;\n$cursor: #fff;\n\n.page-title {\n  font-size: 20px;\n  text-align: left;\n  margin-left: 300px;\n  margin-bottom: 20px;\n}\n\n.list-form {\n  margin-left: 150px;\n}\n\n.register-input {\n  width: 400px;\n  margin-left: 50px;\n}\n\n.login-container {\n  min-height: 100%;\n  width: 100%;\n  background-color: $bg;\n  overflow: hidden;\n\n  .register-form {\n    position: relative;\n    width: 50px;\n    max-width: 100%;\n    padding: 160px 35px 0;\n    margin: 0 auto;\n    overflow: hidden;\n\n    ::v-deep .el-form-item {\n      border: 1px solid rgba(255, 255, 255, 0.1);\n      background: rgba(0, 0, 0, 0.1);\n      border-radius: 5px;\n      color: #454545;\n    }\n\n    ::v-deep .el-input {\n      display: inline-block;\n      height: 47px;\n      width: 40px;\n\n      input {\n        background: transparent;\n        border: 0px;\n        -webkit-appearance: none;\n        border-radius: 0px;\n        padding: 12px 5px 12px 15px;\n        color: $light_gray;\n        height: 47px;\n        caret-color: $cursor;\n      }\n    }\n\n    .login-button {\n      width: 100%;\n      box-sizing: border-box;\n    }\n  }\n\n  .tips {\n    font-size: 16px;\n    line-height: 28px;\n    color: #fff;\n    margin-bottom: 10px;\n\n    span {\n      &:first-of-type {\n        margin-right: 16px;\n      }\n    }\n  }\n\n  .svg-container {\n    padding: 6px 5px 6px 15px;\n    color: $dark_gray;\n    vertical-align: middle;\n    display: inline-block;\n  }\n\n  .title-container {\n    position: relative;\n\n    .title {\n      font-size: 26px;\n      color: $light_gray;\n      margin: 0px auto 40px auto;\n      text-align: center;\n      font-weight: bold;\n    }\n\n    ::v-deep .lang-select {\n      position: absolute;\n      top: 4px;\n      right: 0;\n      background-color: white;\n      font-size: 22px;\n      padding: 4px;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n  }\n\n  .show-pwd {\n    // position: absolute;\n    // right: 10px;\n    // top: 7px;\n    font-size: 16px;\n    color: $dark_gray;\n    cursor: pointer;\n    user-select: none;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}