{"ast":null,"code":"import { onMounted, ref } from 'vue';\nimport { getSwapSummary } from '@/api/getSwapSummary';\nimport { getSwapHistory } from '@/api/getSwapHistory';\nimport { swapDetail } from '@/api/swapDetail';\nimport { rateSwap } from '@/api/rateSwap';\nimport { ElMessage } from 'element-plus';\nexport default {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n\n    const setCellBG = ({\n      row,\n      column,\n      rowIndex,\n      columnIndex\n    }) => {\n      if (row.rej_rate >= 0.5 && column.property === 'rej_rate') {\n        return {\n          background: 'red',\n          color: '#FFFFFF'\n        };\n      }\n    };\n\n    const showDialog = ref(false);\n    const rateValue = ref([]);\n    const swapSummaryData = ref([]);\n    const swapHistoryData = ref([]);\n\n    const initSummaryData = async () => {\n      swapSummaryData.value = [];\n      swapSummaryData.value = await getSwapSummary(localStorage.getItem('token'));\n    };\n\n    const initHistoryData = async () => {\n      rateValue.value = [];\n      swapHistoryData.value = [];\n      swapHistoryData.value = await getSwapHistory(localStorage.getItem('token'));\n    };\n\n    onMounted(async () => {\n      await initSummaryData();\n      await initHistoryData();\n    });\n\n    const handleRate = async row => {\n      const body = {\n        email: localStorage.getItem('token'),\n        rating: rateValue.value[row],\n        swapID: row\n      };\n      rateSwap(body);\n      ElMessage({\n        type: 'info',\n        message: 'rated, reload data'\n      });\n      await initSummaryData();\n      await initHistoryData();\n      rateValue.value = [];\n    };\n\n    const initDetailData = async swapID => {\n      const x = await swapDetail(swapID, localStorage.getItem('token'));\n      console.log(x);\n      dialogData.value.swapID = x.swapID;\n      dialogData.value.proposed_date = x.proposed_date;\n      dialogData.value.aor_date = x.aor_date;\n      dialogData.value.status = x.status;\n      dialogData.value.my_role = x.my_role;\n      dialogData.value.rating = x.rating;\n      dialogData.value.nickname = x.proposed_date;\n      dialogData.value.distance = x.distance;\n      dialogData.value.first_name = x.first_name;\n      dialogData.value.email = x.email;\n      dialogData.value.phone_number = x.phone_number;\n      dialogData.value.phone_type = x.phone_type;\n      dialogData.value.p_itemID = x.p_itemID;\n      dialogData.value.p_title = x.p_title;\n      dialogData.value.p_condition = x.p_condition;\n      dialogData.value.p_description = x.p_description;\n      dialogData.value.p_media = x.p_media;\n      dialogData.value.p_v_platform = x.p_v_platform;\n      dialogData.value.p_c_platform = x.p_c_platform;\n      dialogData.value.p_piece = x.p_piece;\n      dialogData.value.p_game_type = x.p_game_type;\n      dialogData.value.d_itemID = x.d_itemID;\n      dialogData.value.d_title = x.d_title;\n      dialogData.value.d_condition = x.d_condition;\n      dialogData.value.d_description = x.d_description;\n      dialogData.value.d_media = x.d_media;\n      dialogData.value.d_v_platform = x.d_v_platform;\n      dialogData.value.d_c_platform = x.d_c_platform;\n      dialogData.value.d_piece = x.d_piece;\n      dialogData.value.d_game_type = x.d_game_type;\n    };\n\n    const dialogData = ref([]);\n\n    const handleDetail = async row => {\n      await initDetailData(row.swapID);\n      showDialog.value = true;\n    };\n\n    const handleRateDetail = async swapID => {\n      const body = {\n        email: localStorage.getItem('token'),\n        rating: rateValue.value[swapID],\n        swapID: swapID\n      }; // console.log(row.swapID)\n\n      rateSwap(body);\n      await initDetailData(swapID);\n      await initSummaryData();\n      await initHistoryData();\n    };\n\n    const __returned__ = {\n      setCellBG,\n      showDialog,\n      rateValue,\n      swapSummaryData,\n      swapHistoryData,\n      initSummaryData,\n      initHistoryData,\n      handleRate,\n      initDetailData,\n      dialogData,\n      handleDetail,\n      handleRateDetail,\n      onMounted,\n      ref,\n      getSwapSummary,\n      getSwapHistory,\n      swapDetail,\n      rateSwap,\n      ElMessage\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n};","map":{"version":3,"mappings":"AA8IA,SAASA,SAAT,EAAoBC,GAApB,QAA+B,KAA/B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;;;;;IACA,MAAMC,SAAS,GAAG,CAAC;MACjBC,GADiB;MAEjBC,MAFiB;MAGjBC,QAHiB;MAIjBC;IAJiB,CAAD,KAKZ;MACJ,IAAIH,GAAG,CAACI,QAAJ,IAAgB,GAAhB,IAAuBH,MAAM,CAACI,QAAP,KAAoB,UAA/C,EAA2D;QACzD,OAAO;UACLC,UAAU,EAAE,KADP;UAELC,KAAK,EAAE;QAFF,CAAP;MAID;IACF,CAZD;;IAaA,MAAMC,UAAU,GAAGf,GAAG,CAAC,KAAD,CAAtB;IACA,MAAMgB,SAAS,GAAGhB,GAAG,CAAC,EAAD,CAArB;IACA,MAAMiB,eAAe,GAAGjB,GAAG,CAAC,EAAD,CAA3B;IACA,MAAMkB,eAAe,GAAGlB,GAAG,CAAC,EAAD,CAA3B;;IACA,MAAMmB,eAAe,GAAG,YAAY;MAClCF,eAAe,CAACG,KAAhB,GAAwB,EAAxB;MACAH,eAAe,CAACG,KAAhB,GAAwB,MAAMnB,cAAc,CAACoB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAA5C;IACD,CAHD;;IAIA,MAAMC,eAAe,GAAG,YAAY;MAClCP,SAAS,CAACI,KAAV,GAAkB,EAAlB;MACAF,eAAe,CAACE,KAAhB,GAAwB,EAAxB;MACAF,eAAe,CAACE,KAAhB,GAAwB,MAAMlB,cAAc,CAACmB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAA5C;IACD,CAJD;;IAKAvB,SAAS,CAAC,YAAY;MACpB,MAAMoB,eAAe,EAArB;MACA,MAAMI,eAAe,EAArB;IACD,CAHQ,CAAT;;IAIA,MAAMC,UAAU,GAAG,MAAOjB,GAAP,IAAe;MAChC,MAAMkB,IAAI,GAAG;QACXC,KAAK,EAAEL,YAAY,CAACC,OAAb,CAAqB,OAArB,CADI;QAEXK,MAAM,EAAEX,SAAS,CAACI,KAAV,CAAgBb,GAAhB,CAFG;QAGXqB,MAAM,EAAErB;MAHG,CAAb;MAKAH,QAAQ,CAACqB,IAAD,CAAR;MACApB,SAAS,CAAC;QACRwB,IAAI,EAAE,MADE;QAERC,OAAO,EAAE;MAFD,CAAD,CAAT;MAIA,MAAMX,eAAe,EAArB;MACA,MAAMI,eAAe,EAArB;MACAP,SAAS,CAACI,KAAV,GAAkB,EAAlB;IACD,CAdD;;IAeA,MAAMW,cAAc,GAAG,MAAOH,MAAP,IAAkB;MACvC,MAAMI,CAAC,GAAG,MAAM7B,UAAU,CAACyB,MAAD,EAASP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAT,CAA1B;MACAW,OAAO,CAACC,GAAR,CAAYF,CAAZ;MAEAG,UAAU,CAACf,KAAX,CAAiBQ,MAAjB,GAA0BI,CAAC,CAACJ,MAA5B;MACAO,UAAU,CAACf,KAAX,CAAiBgB,aAAjB,GAAiCJ,CAAC,CAACI,aAAnC;MACAD,UAAU,CAACf,KAAX,CAAiBiB,QAAjB,GAA4BL,CAAC,CAACK,QAA9B;MACAF,UAAU,CAACf,KAAX,CAAiBkB,MAAjB,GAA0BN,CAAC,CAACM,MAA5B;MACAH,UAAU,CAACf,KAAX,CAAiBmB,OAAjB,GAA2BP,CAAC,CAACO,OAA7B;MACAJ,UAAU,CAACf,KAAX,CAAiBO,MAAjB,GAA0BK,CAAC,CAACL,MAA5B;MAEAQ,UAAU,CAACf,KAAX,CAAiBoB,QAAjB,GAA4BR,CAAC,CAACI,aAA9B;MACAD,UAAU,CAACf,KAAX,CAAiBqB,QAAjB,GAA4BT,CAAC,CAACS,QAA9B;MACAN,UAAU,CAACf,KAAX,CAAiBsB,UAAjB,GAA8BV,CAAC,CAACU,UAAhC;MACAP,UAAU,CAACf,KAAX,CAAiBM,KAAjB,GAAyBM,CAAC,CAACN,KAA3B;MACAS,UAAU,CAACf,KAAX,CAAiBuB,YAAjB,GAAgCX,CAAC,CAACW,YAAlC;MACAR,UAAU,CAACf,KAAX,CAAiBwB,UAAjB,GAA8BZ,CAAC,CAACY,UAAhC;MAEAT,UAAU,CAACf,KAAX,CAAiByB,QAAjB,GAA4Bb,CAAC,CAACa,QAA9B;MACAV,UAAU,CAACf,KAAX,CAAiB0B,OAAjB,GAA2Bd,CAAC,CAACc,OAA7B;MACAX,UAAU,CAACf,KAAX,CAAiB2B,WAAjB,GAA+Bf,CAAC,CAACe,WAAjC;MACAZ,UAAU,CAACf,KAAX,CAAiB4B,aAAjB,GAAiChB,CAAC,CAACgB,aAAnC;MACAb,UAAU,CAACf,KAAX,CAAiB6B,OAAjB,GAA2BjB,CAAC,CAACiB,OAA7B;MACAd,UAAU,CAACf,KAAX,CAAiB8B,YAAjB,GAAgClB,CAAC,CAACkB,YAAlC;MACAf,UAAU,CAACf,KAAX,CAAiB+B,YAAjB,GAAgCnB,CAAC,CAACmB,YAAlC;MACAhB,UAAU,CAACf,KAAX,CAAiBgC,OAAjB,GAA2BpB,CAAC,CAACoB,OAA7B;MACAjB,UAAU,CAACf,KAAX,CAAiBiC,WAAjB,GAA+BrB,CAAC,CAACqB,WAAjC;MAEAlB,UAAU,CAACf,KAAX,CAAiBkC,QAAjB,GAA4BtB,CAAC,CAACsB,QAA9B;MACAnB,UAAU,CAACf,KAAX,CAAiBmC,OAAjB,GAA2BvB,CAAC,CAACuB,OAA7B;MACApB,UAAU,CAACf,KAAX,CAAiBoC,WAAjB,GAA+BxB,CAAC,CAACwB,WAAjC;MACArB,UAAU,CAACf,KAAX,CAAiBqC,aAAjB,GAAiCzB,CAAC,CAACyB,aAAnC;MACAtB,UAAU,CAACf,KAAX,CAAiBsC,OAAjB,GAA2B1B,CAAC,CAAC0B,OAA7B;MACAvB,UAAU,CAACf,KAAX,CAAiBuC,YAAjB,GAAgC3B,CAAC,CAAC2B,YAAlC;MACAxB,UAAU,CAACf,KAAX,CAAiBwC,YAAjB,GAAgC5B,CAAC,CAAC4B,YAAlC;MACAzB,UAAU,CAACf,KAAX,CAAiByC,OAAjB,GAA2B7B,CAAC,CAAC6B,OAA7B;MACA1B,UAAU,CAACf,KAAX,CAAiB0C,WAAjB,GAA+B9B,CAAC,CAAC8B,WAAjC;IACD,CArCD;;IAsCA,MAAM3B,UAAU,GAAGnC,GAAG,CAAC,EAAD,CAAtB;;IACA,MAAM+D,YAAY,GAAG,MAAOxD,GAAP,IAAe;MAClC,MAAMwB,cAAc,CAACxB,GAAG,CAACqB,MAAL,CAApB;MAEAb,UAAU,CAACK,KAAX,GAAmB,IAAnB;IACD,CAJD;;IAKA,MAAM4C,gBAAgB,GAAG,MAAOpC,MAAP,IAAkB;MACzC,MAAMH,IAAI,GAAG;QACXC,KAAK,EAAEL,YAAY,CAACC,OAAb,CAAqB,OAArB,CADI;QAEXK,MAAM,EAAEX,SAAS,CAACI,KAAV,CAAgBQ,MAAhB,CAFG;QAGXA,MAAM,EAAEA;MAHG,CAAb,CADyC,CAMzC;;MACAxB,QAAQ,CAACqB,IAAD,CAAR;MACA,MAAMM,cAAc,CAACH,MAAD,CAApB;MACA,MAAMT,eAAe,EAArB;MACA,MAAMI,eAAe,EAArB;IACD,CAXD","names":["onMounted","ref","getSwapSummary","getSwapHistory","swapDetail","rateSwap","ElMessage","setCellBG","row","column","rowIndex","columnIndex","rej_rate","property","background","color","showDialog","rateValue","swapSummaryData","swapHistoryData","initSummaryData","value","localStorage","getItem","initHistoryData","handleRate","body","email","rating","swapID","type","message","initDetailData","x","console","log","dialogData","proposed_date","aor_date","status","my_role","nickname","distance","first_name","phone_number","phone_type","p_itemID","p_title","p_condition","p_description","p_media","p_v_platform","p_c_platform","p_piece","p_game_type","d_itemID","d_title","d_condition","d_description","d_media","d_v_platform","d_c_platform","d_piece","d_game_type","handleDetail","handleRateDetail"],"sources":["/Users/alzhong/Personal/Projects/FamilyCareInventory/frontend/src/views/MainView/SwapHistoryView/SwapHistoryView.vue"],"sourcesContent":["<template>\n  <div class=\"swap-history-container\">\n    <div class=\"swap-summary\">\n      <el-table :data=\"swapSummaryData\" height=\"250\" style=\"width: 100%\" :cell-style=\"setCellBG\">\n        <el-table-column prop=\"my_role\" label=\"My Role\" width=\"180\"/>\n        <el-table-column prop=\"total\" label=\"Total\" width=\"180\"/>\n        <el-table-column prop=\"accepted_cnt\" label=\"Accepted\"/>\n        <el-table-column prop=\"rejected_cnt\" label=\"Rejected\"/>\n        <el-table-column prop=\"rej_rate\" label=\"Rejected %\">\n          <template #default=\"scope\">\n            {{ (scope.row.rej_rate * 100).toFixed(1) + '%' }}\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div class=\"historyDetail\">\n      <el-table :data=\"swapHistoryData\" height=\"700\" style=\"width: 100%\">\n        <el-table-column prop=\"swapID\" label=\"swap ID\" width=\"180\"/>\n        <el-table-column prop=\"proposed_date\" label=\"Proposed Date\" width=\"180\"/>\n        <el-table-column prop=\"aor_date\" label=\"Accepted/Rejected Date\" width=\"180\"/>\n        <el-table-column prop=\"status\" label=\"Swap Status\"/>\n        <el-table-column prop=\"my_role\" label=\"My Role\"/>\n        <el-table-column prop=\"proposed_item_title\" label=\"Proposed Item\"/>\n        <el-table-column prop=\"desired_item_title\" label=\"Desired Item\"/>\n        <el-table-column prop=\"nickname\" label=\"Other User\"/>\n        <el-table-column prop=\"rating\" label=\"Rating\">\n          <template #default=\"scope\">\n            <el-select v-if=\"scope.row.status==='accepted' && scope.row.rating==='None'\"\n                       v-model=\"rateValue[scope.row.swapID]\"\n                       @change=\"handleRate(scope.row.swapID)\"\n            >\n              <el-option label=\"0\" value=0></el-option>\n              <el-option label=\"1\" value=1></el-option>\n              <el-option label=\"2\" value=2></el-option>\n              <el-option label=\"3\" value=3></el-option>\n              <el-option label=\"4\" value=4></el-option>\n              <el-option label=\"5\" value=5></el-option>\n            </el-select>\n            <p v-if=\"scope.row.status==='accepted' && scope.row.rating!=='None'\">{{ scope.row.rating }}</p>\n            <p v-if=\"scope.row.status==='pending'\"></p>\n            <p v-if=\"scope.row.status==='rejected'\"></p>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"\">\n          <template #default=\"{ row }\">\n            <el-button type=\"text\" size=\"small\" @click=\"handleDetail(row)\"\n            >Detail\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-dialog\n          v-model=\"showDialog\"\n      >\n        <el-descriptions title=\"Swap Details\" :column=\"1\">\n          <el-descriptions-item label=\"Proposed:\">{{ dialogData.proposed_date }}</el-descriptions-item>\n          <el-descriptions-item label=\"Accepted/Rejected:\">{{ dialogData.aor_date }}</el-descriptions-item>\n          <el-descriptions-item label=\"Status:\">{{ dialogData.status }}</el-descriptions-item>\n          <el-descriptions-item label=\"Rating left:\" v-if=\"dialogData.status === 'accepted'\">\n            <el-select v-if=\"dialogData.status==='accepted' && dialogData.rating==='None'\"\n                       v-model=\"rateValue[dialogData.swapID]\"\n                       @change=\"handleRateDetail(dialogData.swapID)\"\n            >\n              <el-option label=\"0\" value=0></el-option>\n              <el-option label=\"1\" value=1></el-option>\n              <el-option label=\"2\" value=2></el-option>\n              <el-option label=\"3\" value=3></el-option>\n              <el-option label=\"4\" value=4></el-option>\n              <el-option label=\"5\" value=5></el-option>\n            </el-select>\n            <span v-if=\"dialogData.status==='accepted' && dialogData.rating!=='None' \">{{ dialogData.rating }}</span>\n            <span v-if=\"dialogData.status==='pending' \"></span>\n            <span v-if=\"dialogData.status==='rejected' \"></span>\n          </el-descriptions-item>\n        </el-descriptions>\n        <el-descriptions title=\"User Details\" :column=\"1\">\n          <el-descriptions-item label=\"Nickname:\">{{ dialogData.nickname }}</el-descriptions-item>\n          <el-descriptions-item label=\"Distance:\">{{ dialogData.distance.toFixed(1) }} miles</el-descriptions-item>\n          <el-descriptions-item label=\"Name:\" v-if=\"dialogData.status === 'accepted'\">{{\n              dialogData.first_name\n            }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Email:\" v-if=\"dialogData.status === 'accepted'\">{{\n              dialogData.email\n            }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Phone:\"\n                                v-if=\"dialogData.status === 'accepted' && dialogData.phone_number !== null\">\n            {{ dialogData.phone_number }} ({{ dialogData.phone_type }})\n          </el-descriptions-item>\n        </el-descriptions>\n        <el-descriptions title=\"Proposed Item\" :column=\"1\">\n          <el-descriptions-item label=\"Item #:\">{{ dialogData.p_itemID }}</el-descriptions-item>\n          <el-descriptions-item label=\"Title:\">{{ dialogData.p_title }}</el-descriptions-item>\n          <el-descriptions-item label=\"Game type:\">{{ dialogData.p_game_type }}</el-descriptions-item>\n          <el-descriptions-item label=\"Condition:\">{{ dialogData.p_condition }}</el-descriptions-item>\n          <el-descriptions-item label=\"Description:\" v-if=\"dialogData.p_description.length>0\">{{\n              dialogData.p_description\n            }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Console Platform:\" v-if=\"dialogData.p_game_type === 'Video game'\">\n            {{ dialogData.p_v_platform }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Media:\" v-if=\"dialogData.p_game_type === 'Video game'\">{{\n              dialogData.p_media\n            }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Computer System Platform:\" v-if=\"dialogData.p_game_type === 'Computer game'\">\n            {{ dialogData.p_c_platform }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Jigsaw Pieces Number:\" v-if=\"dialogData.p_game_type === 'Jigsaw puzzle'\">\n            {{ dialogData.p_piece }}\n          </el-descriptions-item>\n        </el-descriptions>\n        <el-descriptions title=\"Desired Item\" :column=\"1\">\n          <el-descriptions-item label=\"Item #:\">{{ dialogData.d_itemID }}</el-descriptions-item>\n          <el-descriptions-item label=\"Title:\">{{ dialogData.d_title }}</el-descriptions-item>\n          <el-descriptions-item label=\"Game type:\">{{ dialogData.d_game_type }}</el-descriptions-item>\n          <el-descriptions-item label=\"Condition:\">{{ dialogData.d_condition }}</el-descriptions-item>\n          <el-descriptions-item label=\"Description:\" v-if=\"dialogData.d_description.length>0\">\n            {{ dialogData.d_description }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Console Platform:\" v-if=\"dialogData.d_game_type === 'Video game'\">\n            {{ dialogData.d_v_platform }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Media:\" v-if=\"dialogData.d_game_type === 'Video game'\">{{\n              dialogData.d_media\n            }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Computer System Platform:\" v-if=\"dialogData.d_game_type === 'Computer game'\">\n            {{ dialogData.d_c_platform }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"Jigsaw Pieces Number:\" v-if=\"dialogData.d_game_type === 'Jigsaw puzzle'\">\n            {{ dialogData.d_piece }}\n          </el-descriptions-item>\n        </el-descriptions>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from 'vue'\nimport { getSwapSummary } from '@/api/getSwapSummary'\nimport { getSwapHistory } from '@/api/getSwapHistory'\nimport { swapDetail } from '@/api/swapDetail'\nimport { rateSwap } from '@/api/rateSwap'\nimport { ElMessage } from 'element-plus'\nconst setCellBG = ({\n  row,\n  column,\n  rowIndex,\n  columnIndex\n}) => {\n  if (row.rej_rate >= 0.5 && column.property === 'rej_rate') {\n    return {\n      background: 'red',\n      color: '#FFFFFF'\n    }\n  }\n}\nconst showDialog = ref(false)\nconst rateValue = ref([])\nconst swapSummaryData = ref([])\nconst swapHistoryData = ref([])\nconst initSummaryData = async () => {\n  swapSummaryData.value = []\n  swapSummaryData.value = await getSwapSummary(localStorage.getItem('token'))\n}\nconst initHistoryData = async () => {\n  rateValue.value = []\n  swapHistoryData.value = []\n  swapHistoryData.value = await getSwapHistory(localStorage.getItem('token'))\n}\nonMounted(async () => {\n  await initSummaryData()\n  await initHistoryData()\n})\nconst handleRate = async (row) => {\n  const body = {\n    email: localStorage.getItem('token'),\n    rating: rateValue.value[row],\n    swapID: row\n  }\n  rateSwap(body)\n  ElMessage({\n    type: 'info',\n    message: 'rated, reload data'\n  })\n  await initSummaryData()\n  await initHistoryData()\n  rateValue.value = []\n}\nconst initDetailData = async (swapID) => {\n  const x = await swapDetail(swapID, localStorage.getItem('token'))\n  console.log(x)\n\n  dialogData.value.swapID = x.swapID\n  dialogData.value.proposed_date = x.proposed_date\n  dialogData.value.aor_date = x.aor_date\n  dialogData.value.status = x.status\n  dialogData.value.my_role = x.my_role\n  dialogData.value.rating = x.rating\n\n  dialogData.value.nickname = x.proposed_date\n  dialogData.value.distance = x.distance\n  dialogData.value.first_name = x.first_name\n  dialogData.value.email = x.email\n  dialogData.value.phone_number = x.phone_number\n  dialogData.value.phone_type = x.phone_type\n\n  dialogData.value.p_itemID = x.p_itemID\n  dialogData.value.p_title = x.p_title\n  dialogData.value.p_condition = x.p_condition\n  dialogData.value.p_description = x.p_description\n  dialogData.value.p_media = x.p_media\n  dialogData.value.p_v_platform = x.p_v_platform\n  dialogData.value.p_c_platform = x.p_c_platform\n  dialogData.value.p_piece = x.p_piece\n  dialogData.value.p_game_type = x.p_game_type\n\n  dialogData.value.d_itemID = x.d_itemID\n  dialogData.value.d_title = x.d_title\n  dialogData.value.d_condition = x.d_condition\n  dialogData.value.d_description = x.d_description\n  dialogData.value.d_media = x.d_media\n  dialogData.value.d_v_platform = x.d_v_platform\n  dialogData.value.d_c_platform = x.d_c_platform\n  dialogData.value.d_piece = x.d_piece\n  dialogData.value.d_game_type = x.d_game_type\n}\nconst dialogData = ref([])\nconst handleDetail = async (row) => {\n  await initDetailData(row.swapID)\n\n  showDialog.value = true\n}\nconst handleRateDetail = async (swapID) => {\n  const body = {\n    email: localStorage.getItem('token'),\n    rating: rateValue.value[swapID],\n    swapID: swapID\n  }\n  // console.log(row.swapID)\n  rateSwap(body)\n  await initDetailData(swapID)\n  await initSummaryData()\n  await initHistoryData()\n}\n</script>\n\n<style scoped lang=\"scss\">\n.swap-history-container {\n  margin-left: 200px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}